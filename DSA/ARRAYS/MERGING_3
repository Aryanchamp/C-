You are working on a project that involves merging two arrays and performing the sum between corresponding elements. The arrays represent the daily sales of two different products over a week.



Your task is to write a program that takes input from the user for the two arrays and performs the sum between corresponding elements of two products from each array.



Company Tags: TCS

Input format :
The first line of input consists of an integer n, representing the size of the first array.

The second line of input consists of n space-separated integers representing the elements of the first array.

The third line of input consists of an integer m, representing the size of the second array.

The fourth line of input consists of m space-separated representing the elements of the second array.

Output format :
The output displays the sum between corresponding elements, separated by space.



Refer to the sample output for the formatting specifications.

Code constraints :
1 ≤ n, m ≤ 10

1 ≤ array elements ≤ 25

Sample test cases :
Input 1 :
5
1 2 3 4 5
6
6 7 8 9 10 11
Output 1 :
7 9 11 13 15 11 
Input 2 :
3
1 2 3
2
4 5
Output 2 :
5 7 3 


-------------------------------------------------------------------------


#include <iostream>
#include <vector>
using namespace std;

int main() {
    int size1;
    cin >> size1;
    
    // Validate size1
    if (size1 <= 0) {
        cerr << "Invalid size for the first array." << endl;
        return 1;
    }
    
    vector<int> arr1(size1);
    for (int i = 0; i < size1; i++) {
        cin >> arr1[i];
    }
    
    int size2;
    cin >> size2;
    
    // Validate size2
    if (size2 <= 0) {
        cerr << "Invalid size for the second array." << endl;
        return 1;
    }
    
    vector<int> arr2(size2);
    for (int i = 0; i < size2; i++) {
        cin >> arr2[i];
    }
    
    // Determine the maximum size for the final array
    int maxSize = max(size1, size2);
    vector<int> final(maxSize, 0); // Initialize with zeros

    // Add elements from arr1 and arr2
    for (int i = 0; i < size1; i++) {
        final[i] += arr1[i];
    }
    for (int i = 0; i < size2; i++) {
        final[i] += arr2[i];
    }
    
    // Output the result
    for (int i = 0; i < maxSize; i++) {
        cout << final[i] << " ";
    }
    cout << endl; // Add a newline for better formatting
    
    return 0;
}
