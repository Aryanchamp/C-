You are developing a sales analytics system for a retail company. As part of the system, you need to implement a feature that sorts the sales data in descending order based on the revenue generated by each product.



Write a program that prompts the user to enter the number of products and their respective revenue figures. The program should then use the insertion sort algorithm to sort the revenue figures in descending order and print with its iteration. After sorting, the program should display the products along with their corresponding sorted revenue figures.



Company Tags: Capgemini 

Input format :
The first line of input consists of an integer N, representing the size of the array.

The second line of input consists of the N space separated integers representing the array elements.

Output format :
The first line of output prints "Initial order: " followed by the initial array of elements, separated by space.

The following n-1 lines prints "After Iteration X: Y" where X is the iteration number and Y represents the result of each iteration separated by space.

The last line of output prints "Sorted order: " followed by the final sorted array in decreasing order.



Refer to the sample output for formatting specifications.

Code constraints :
In this scenario, the test cases fall under the following constraints:

1 ≤ n ≤ 15

1 ≤ array elements ≤ 1000

Sample test cases :
Input 1 :
4
471 774 814 136
Output 1 :
Initial order: 471 774 814 136 
After Iteration 1: 774 471 814 136 
After Iteration 2: 814 774 471 136 
After Iteration 3: 814 774 471 136 
Sorted order: 814 774 471 136 
Input 2 :
5
207 455 129 367 578
Output 2 :
Initial order: 207 455 129 367 578 
After Iteration 1: 455 207 129 367 578 
After Iteration 2: 455 207 129 367 578 
After Iteration 3: 455 367 207 129 578 
After Iteration 4: 578 455 367 207 129 
Sorted order: 578 455 367 207 129


--------------------------------------------------------------------------------------


#include <iostream>
#include <vector>
using namespace std;

void insertionSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = 1; i < n; ++i) {
        int key = arr[i];
        int j = i - 1;
        
        while (j >= 0 && arr[j] < key) {
            arr[j + 1] = arr[j];
            --j;
        }
        arr[j + 1] = key;
        
        // Output current iteration result
        cout << "After Iteration " << i << ": ";
        for (int k = 0; k < n; ++k) {
            cout << arr[k] << " ";
        }
        cout << endl;
    }
}

int main() {
    int n;
    cin >> n;
    
    vector<int> revenues(n);
    for (int i = 0; i < n; ++i) {
        cin >> revenues[i];
    }
    
    // Output initial order
    cout << "Initial order: ";
    for (int i = 0; i < n; ++i) {
        cout << revenues[i] << " ";
    }
    cout << endl;
    
    // Perform insertion sort in descending order
    insertionSort(revenues);
    
    // Output sorted order
    cout << "Sorted order: ";
    for (int i = 0; i < n; ++i) {
        cout << revenues[i] << " ";
    }
    cout << endl;
    
    return 0;
}// You are using GCC
