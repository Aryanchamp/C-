You are developing a program that merges two sorted arrays of student IDs. The first array contains the student IDs of students who have successfully completed Course A, while the second array contains the student IDs of students who have successfully completed Course B. 



Your task is to merge these two arrays into a single sorted array that will be used for further analysis.



Company Tags: CapgeminI

Input format :
The first line of input consists of an integer n, representing the size of the first array.

The second line contains n space-separated integers representing the elements of the first array.

The third line of input consists of an integer m, representing the size of the second array.

The fourth line of input consists of m space-separated integers, representing the elements of the second array.

Output format :
The output displays the merged array, with elements separated by a space.



Refer to the sample output for the formatting specifications.

Code constraints :
1 ≤ n, m ≤ 10

1 ≤ array elements ≤ 25

Sample test cases :
Input 1 :
5
1 2 3 4 5
6
6 7 8 9 10 11
Output 1 :
1 2 3 4 5 6 7 8 9 10 11 
Input 2 :
3
1 2 3
2
4 5
Output 2 :
1 2 3 4 5 


-----------------------------------------------------------------------------------------


#include <iostream>
#include <vector>
using namespace std;

vector<int> merge_sorted_arrays(const vector<int>& arr1, const vector<int>& arr2) {
    vector<int> merged;
    int i = 0, j = 0;
    
    while (i < arr1.size() && j < arr2.size()) {
        if (arr1[i] < arr2[j]) {
            merged.push_back(arr1[i]);
            i++;
        } else {
            merged.push_back(arr2[j]);
            j++;
        }
    }
    
    // Append remaining elements from arr1 (if any)
    while (i < arr1.size()) {
        merged.push_back(arr1[i]);
        i++;
    }
    
    // Append remaining elements from arr2 (if any)
    while (j < arr2.size()) {
        merged.push_back(arr2[j]);
        j++;
    }
    
    return merged;
}

int main() {
    int n, m;
    cin >> n;
    vector<int> arr1(n);
    for (int i = 0; i < n; ++i) {
        cin >> arr1[i];
    }
    
    cin >> m;
    vector<int> arr2(m);
    for (int i = 0; i < m; ++i) {
        cin >> arr2[i];
    }
    
    // Merge the two arrays
    vector<int> merged_array = merge_sorted_arrays(arr1, arr2);
    
    // Output the merged array
    for (int i = 0; i < merged_array.size(); ++i) {
        cout << merged_array[i];
        if (i < merged_array.size() - 1) {
            cout << " ";
        }
    }
    cout << endl;
    
    return 0;
}
