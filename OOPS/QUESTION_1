A research institute is analyzing the properties of integers for a mathematical study. They need to compute the sum of all divisors of each number from 1 to a given number n. This calculation helps in understanding patterns and characteristics of divisors in a range of numbers using reference variables.



The institute requires a tool to calculate the total sum of all divisors for every integer from 1 to n. The tool should read the integer n from the user, compute the required sum, and output it.



Function Name: int divisorSum(int& n)



Example

For n = 4:

Divisors of 1: 1 (Sum: 1)
Divisors of 2: 1, 2 (Sum: 3)
Divisors of 3: 1, 3 (Sum: 4)
Divisors of 4: 1, 2, 4 (Sum: 7)
The total sum of all divisors is 1 +3 + 4 + 7 = 15. Thus, the output is 15.



Note: This is a sample question asked in Infosys recruitment.

Input format :
The input consists of an integer n.

Output format :
The output displays a single integer representing the sum of all divisors of every number from 1 to n.



Refer to the sample output for the formatting specifications.

Code constraints :
1 ≤ n ≤ 15

Sample test cases :
Input 1 :
4
Output 1 :
15
Input 2 :
5
Output 2 :
21



-----------------------------------------------------------------------------------------------------------------------------



#include <iostream>
using namespace std;

// Function to calculate the sum of all divisors for each number from 1 to n
int divisorSum(int& n) {
    int totalSum = 0;
    
    // Iterate over each number from 1 to n
    for (int i = 1; i <= n; ++i) {
        int sumDivisors = 0;
        
        // Find all divisors of i
        for (int j = 1; j <= i; ++j) {
            if (i % j == 0) {
                sumDivisors += j;
            }
        }
        
        // Add sum of divisors of i to the total sum
        totalSum += sumDivisors;
    }
    
    return totalSum;
}

int main() {
    int n;
    cin >> n;  // Read the input integer n
    
    int result = divisorSum(n);  // Compute the total sum of divisors
    cout << result << endl;  // Output the result
    
    return 0;
}// You are using GCC
